name: build

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:

jobs:
  perl:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        perl-version:
          - '5.8'
          - 'latest'

    container:
      image: perl:${{ matrix.perl-version }}

    steps:
      - uses: actions/checkout@v1
      - name: perl -V
        run: perl -V
      - name: Install dependencies
        run: curl -sL https://git.io/cpm | perl - install -g --with-recommends --with-test --with-configure --show-build-log-on-failure
        if: matrix.perl-version != 'latest'
      - name: Install dependencies with develop
        run: curl -sL https://git.io/cpm | perl - install -g --with-recommends --with-test --with-configure --with-develop --show-build-log-on-failure
        if: matrix.perl-version == 'latest'
      - name: Install Cover
        run: curl -sL https://git.io/cpm | perl - install -g --show-build-log-on-failure Devel::Cover::Report::Coveralls
        if: matrix.perl-version == 'latest'
      - name: Show ENV
        run: |
            echo $HOME
            echo $GITHUB_WORKFLOW
            echo $GITHUB_EVENT_NAME
            echo $GITHUB_SHA
            echo $GITHUB_REF
            git log -1 --pretty=format:'%s'
            git branch
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      - name: Run tests
        run: perl Makefile.PL && make && make manifest
      - name: Run Cover
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: |
            cover -test
            cover -report coveralls
        if: matrix.perl-version == 'latest'
      - name: CPANize
        env:
          PAUSE_USER: ${{ secrets.PAUSE_USER }}
          PAUSE_EMAIL: ${{ secrets.PAUSE_EMAIL }}
          PAUSE_PASSWORD: ${{ secrets.PAUSE_PASSWORD }}
        run: |
            curl -sL https://git.io/cpm | perl - install -g --show-build-log-on-failure LWP::UserAgent AppConfig::Std HTTP::Request::Common HTTP::Status
            curl -L https://cpanmin.us | perl - -M https://cpan.metacpan.org -n -q https://cpan.metacpan.org/authors/id/B/BR/BRADFITZ/cpan-upload-http-2.4.tar.gz
            curl -sL https://git.io/cpm | perl - install -g --show-build-log-on-failure ShipIt ShipIt::Step::ChangeAllVersions
            echo "steps = FindVersion, ChangeAllVersions, MakeDist" > .shipit
            cat .shipit
            shipit
            ls -la
            cpan-upload-http -ni -user $PAUSE_USER -password $PAUSE_PASSWORD -mailto $PAUSE_EMAIL
        if: matrix.perl-version == 'latest' && github.ref == 'refs/heads/master'